<!DOCTYPE html>
<html lang="<%= I18n.locale %>" data-bs-theme="unknown">
<head>
  <meta charset="UTF-8">
  <title>home.luk4s.cz</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <%= yield :meta_tags %>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <%= vite_stylesheet_tag "application", media: "all", data: { "turbo-track" => "reload" } %>
  <%= yield :stylesheet_tags %>
  <%= vite_client_tag %>
  <%= vite_javascript_tag "application", data: { "turbo-track" => "reload" } %>
  <%= yield :javascript_tags %>
  <%= csrf_meta_tags %>
    <%= vite_client_tag %>
    <%= vite_javascript_tag 'application' %>
    <!--
      If using a TypeScript entrypoint file:
        vite_typescript_tag 'application'

      If using a .jsx or .tsx entrypoint, add the extension:
        vite_javascript_tag 'application.jsx'

      Visit the guide for more information: https://vite-ruby.netlify.app/guide/rails
    -->

</head>
<body class="controller-<%= controller_name %> action-<%= action_name %>">
<header data-turbo-permanent>


  <nav class="navbar navbar-expand-lg bg-body-tertiary fixed-top">
    <div class="container-fluid">
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <%= icon("bars") %>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul itemscope="itemscope" itemtype="https://schema.org/BreadcrumbList" class="navbar-nav me-auto mb-2 mb-lg-0" id="top_menu">
          <li class="nav-item home">
            <a class="nav-link" itemprop="url" href="/">
              <i class="fa fa-home"></i>
              <span itemprop="title"><%= t :button_home %></span>
            </a>
          </li>
        </ul>
        <ul itemscope="itemscope" itemtype="https://schema.org/BreadcrumbList" class="navbar-nav ms-auto" id="top_menu_account">
          <% if user_signed_in? %>
            <li class="nav-item my_account">
              <a class="nav-link" itemprop="url" href="<%= edit_home_path %>">
                <i class="fa fa-wrench"></i>
                <span itemprop="title"><%= t :button_my_account %></span>
              </a>
            </li>
            <li class="nav-item logout">
              <a class="nav-link" itemprop="url" rel="nofollow" data-turbo-method="delete" href="<%= destroy_user_session_path %>">
                <i class="fa fa-sign-out"></i>
                <span itemprop="title"><%= t :button_logout %></span>
              </a>
            </li>
          <% end %>
        </ul>
      </div>
    </div>
  </nav>
</header>
<section id="main" class="container">
  <!--  <slot id="flash_messages" name="flash_messages"><%#= render_flash_messages.html_safe -%></slot>-->
  <%= render_flash_messages %>
  <%= yield %>
</section>

<div id="ajax-indicator" style="display:none"><i class="fa fa-spinner fa-spin fa-large"></i></div>
<script async src="https://cdn.jsdelivr.net/npm/es-module-shims@1/dist/es-module-shims.min.js" crossorigin="anonymous"></script>
<script type="importmap">
    {
      "imports": {
        "@popperjs/core": "https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/esm/popper.min.js",
        "bootstrap": "https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.esm.min.js"
      }
    }

</script>
<script type="module">
  import * as bootstrap from 'bootstrap'

  new bootstrap.Popover(document.getElementById('popoverButton'))
</script>
<script type="application/javascript">
  document.addEventListener("DOMContentLoaded", () => {
    const isDarkMode = window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches;

    // Set the `data-bs-theme` attribute based on the dark mode status
    document.documentElement.setAttribute("data-bs-theme", isDarkMode ? "dark" : "light");

    // Optional: Listen for changes in the color scheme preference and update the attribute accordingly
    window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", event => {
      document.documentElement.setAttribute("data-bs-theme", event.matches ? "dark" : "light");
    });
  });
</script>
</body>
</html>
